# https://taskfile.dev
version: "3"

tasks:
  nix:
    cmds:
      - "curl -fsSL https://install.determinate.systems/nix | sh -s -- install --determinate"
    interactive: true
    preconditions:
      - sh: "command -v curl &>/dev/null"
        msg: "requires `curl` to be installed"
    defer:
      - task: nix:shim
        silent: true
    status:
      - test -e /nix

  nix:shim:
    cmds:
      - |
        if [ -x ~/.nix-profile/bin/nix ]; then
          ln -vfs ~/.nix-profile/bin/nix ~/.local/bin/nix
        elif [ -x /nix/var/nix/profiles/default/bin/nix ]; then
          ln -vfs /nix/var/nix/profiles/default/bin/nix ~/.local/bin/nix
        else
          printf 'Nix is not installed\n' >&2
          exit 1
        fi
    status:
      - test -e ~/.local/bin/nix
    silent: true
    run: once

  zsh:
    deps:
      - nix:shim
    cmds:
      - ~/.local/bin/nix profile install nixpkgs#zsh
    status:
      - test -x ~/.nix-profile/bin/zsh

  zplug:
    preconditions:
      - sh: "command -v git &>/dev/null"
        msg: "requires `git` to be installed"
    cmds:
      - git clone https://github.com/zplug/zplug.git ~/.zplug
    status:
      - test -e ~/.zplug/

  direnv:
    deps:
      - nix:shim
    cmds:
      - ~/.local/bin/nix profile install nixpkgs#direnv
    status:
      - test -x ~/.nix-profile/bin/direnv

  curl:
    deps:
      - nix:shim
    cmds:
      - ~/.local/bin/nix profile install nixpkgs#curl
    status:
      - test -x ~/.nix-profile/bin/curl

  unzip:
    deps:
      - nix:shim
    cmds:
      - ~/.local/bin/nix profile install nixpkgs#unzip
    status:
      - test -x ~/.nix-profile/bin/unzip

  terraform:
    requires:
      vars:
        - terraform_version
    deps:
      - curl
      - unzip
    cmds:
      - |
        tempdir="$(mktemp -d)"
        trap 'rm -rf "$tempdir"' EXIT
        pushd "$tempdir" &>/dev/null
        curl -SsLo ./terraform.zip 'https://releases.hashicorp.com/terraform/{{ .Vars.terraform_version }}/terraform_{{ .Vars.terraform_version }}_{{ OS }}_{{ ARCH }}.zip'
        unzip ./terraform.zip
        install -m0755 ./terraform ~/.local/bin
        popd &>/dev/null
    status:
      - test -x ~/.local/bin/terraform

  vault:
    requires:
      vars:
        - vault_version
    deps:
      - curl
      - unzip
    cmds:
      - |
        tempdir="$(mktemp -d)"
        trap 'rm -rf "$tempdir"' EXIT
        pushd "$tempdir" &>/dev/null
        curl -SsLo ./vault.zip 'https://releases.hashicorp.com/vault/{{ .Vars.vault_version }}/vault_{{ .Vars.vault_version }}_{{ OS }}_{{ ARCH }}.zip'
        unzip ./vault.zip
        install -m0755 ./vault ~/.local/bin
        popd &>/dev/null
    status:
      - test -x ~/.local/bin/vault

  starship:
    deps:
      - nix:shim
    cmds:
      - ~/.local/bin/nix profile install nixpkgs#starship
    status:
      - test -x ~/.nix-profile/bin/starship
