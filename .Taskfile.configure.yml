# https://taskfile.dev
version: "3"

tasks:
  xdg:
    cmds:
      - cmd: mkdir -p ~/.config ~/.local/share ~/.local/state ~/.local/bin
        silent: true
    status:
      - test -d ~/.config
      - test -d ~/.local/share
      - test -d ~/.local/state
      - test -d ~/.local/bin

  starship:
    cmds:
      - cmd: ln -vfs {{ .TASKFILE_DIR }}/configs/starship.toml ~/.config/starship.toml
    status:
      - test -e ~/.config/starship.toml

  neovim:
    cmds:
      - cmd: ln -s {{ .TASKFILE_DIR }}/configs/nvim ~/.config/nvim
    defer:
      - task: neovim:mason
    status:
      - test -e ~/.config/nvim

  neovim:mason:
    preconditions:
      - sh: test -x ~/.local/bin/nvim
        msg: "requires `nvim` to be installed"
    cmds:
      # TODO: actually call `:Mason`
      - "echo 'Call `:Mason` in neovim to complete installation'"
    interactive: true

  zsh:
    cmds:
      - cmd: mkdir -p ~/.zsh/{configs,functions,completion}
        silent: true
      - cmd: |
          while read -r source; do
            ln -vfs "{{ .TASKFILE_DIR }}/${source}" ~/.zsh/configs/"${source//.\/configs\/zsh\/config\//}"
          done < <(find ./configs/zsh/config -name '*.zsh' -type f)
      - cmd: |
          while read -r source; do
            ln -vfs "{{ .TASKFILE_DIR }}/${source}" ~/.zsh/functions/"${source//.\/configs\/zsh\/functions\//}"
          done < <(find ./configs/zsh/functions -name '*' -type f)
      - cmd: |
          while read -r source; do
            ln -vfs "{{ .TASKFILE_DIR }}/${source}" ~/.zsh/completion/"${source//.\/configs\/zsh\/completion\//}"
          done < <(find ./configs/zsh/completion -name '*' -type f)
      - cmd: |
          ln -vfs '{{ .TASKFILE_DIR }}/configs/zsh/zshrc' ~/.zshrc
          touch ~/.zshrc.local
      - cmd: |
          ln -vfs '{{ .TASKFILE_DIR }}/configs/zsh/zshenv' ~/.zshenv
          touch ~/.zshenv.local
    sources:
      - ./configs/zsh/**
    dir: "{{ .TASKFILE_DIR }}"
    method: checksum
    run: when_changed

  git:
    cmds:
      - task: git:config
      - task: git:ignore

  git:config:
    cmds:
      - cmd: mkdir -p ~/.config/git
        silent: true
      - cmd: ln -vfs '{{ .TASKFILE_DIR }}/configs/git/config' ~/.config/git/config
      - cmd: touch ~/.config/git/config.local
    status:
      - test -e ~/.config/git/config
      - test -e ~/.config/git/config.local

  git:ignore:
    cmds:
      - cmd: mkdir -p ~/.config/git
        silent: true
      - cmd: ln -vfs '{{ .TASKFILE_DIR }}/configs/git/ignore' ~/.config/git/ignore
    status:
      - test -e ~/.config/git/ignore

  tmux:tpm:
    preconditions:
      - sh: command -v git &>/dev/null
        msg: "requires `git` to be installed"
    cmds:
      - cmd: mkdir -p ~/.config/tmux/plugins
        silent: true
      - cmd: |
          export PATH="${HOME}/.local/bin:${PATH}"
          git clone https://github.com/tmux-plugins/tpm.git ~/.config/tmux/plugins/tpm
    status:
      - test -x ~/.config/tmux/plugins/tpm/tpm

  tmux:
    deps:
      - tmux:tpm
    cmds:
      - cmd: ln -vfs '{{ .TASKFILE_DIR }}/configs/tmux/tmux.conf' ~/.config/tmux/tmux.conf
      - cmd: ~/.config/tmux/plugins/tpm/scripts/install_plugins.sh
    status:
      - test -e ~/.config/tmux/tmux.conf
      - test -e ~/.config/tmux/plugins/tmux-gruvbox
      - test -e ~/.config/tmux/plugins/tmux-sensible
